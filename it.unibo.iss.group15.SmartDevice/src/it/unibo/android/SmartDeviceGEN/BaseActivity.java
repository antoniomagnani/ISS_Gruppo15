/* ======================================================
* Generated by AN 
* University of Bologna
* ======================================================-
*/
package  it.unibo.android.SmartDeviceGEN;
import it.unibo.android.smartDevice.R;
import it.unibo.is.interfaces.IOutputView;
import android.app.Activity;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.widget.TextView;
import android.net.Uri;

public class BaseActivity extends Activity{
 public MessageHandler myHandler;
 protected TextView output;
 protected IOutputView outView = null;
 protected Bundle myBundle;
 protected boolean verbose = false;
	
	/* ======================================== 
	 *  ACTIVITY AS A COMPONENT
	 *	Activity cycle  
	 * ========================================
	 */
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		myHandler = new  MessageHandler(this);
		myBundle  = new Bundle();
		output    = (TextView) findViewById(R.id.output);
		outView   = new OutView(this);
	}
	protected void onStart() {
		super.onStart();
		traceMsg("onStart -> " + this.getLocalClassName());
	}//onResume
	protected void onResume() {
		super.onResume();
		traceMsg("onResume -> " + this.getLocalClassName());
	}//onResume
	protected void onRestart() {
		super.onRestart();
		traceMsg("onRestart -> " + this.getLocalClassName());
	}//onResume
	protected void onPause() {
		super.onPause();
		traceMsg("onPause -> " + this.getLocalClassName());
	}//onResume
	protected void onStop() {
		super.onStop();
		traceMsg("onStop -> " + this.getLocalClassName());
	}//onResume
	protected void onDestroy() {
		super.onDestroy();
		traceMsg("onDestroy -> " + this.getLocalClassName());
	}//onDestroy
	/*
	 *  -------------------------------------
	 *   Utilities  
	 *  -------------------------------------
	 */
	public void println(String msg) {
		if (output == null){ 
			output = (TextView) findViewById(R.id.output);
		}
		output.append(msg+"\n");
	}
	public void printMsg(String msg) {
		if (output == null){ 
			output = (TextView) findViewById(R.id.output);
		}
		output.setText( msg );
	}
	public void showMsg(String msg) {
		if (outView != null) 
		outView.addOutput(msg);
	}
	protected void traceMsg(String msg) {
		if (verbose)
			println(msg);
	}
	protected String activityInfo() {	
		return this.getLocalClassName() + " | taskId=" + this.getTaskId();
	}
	
	protected Uri makeUri(String uriStr, String data) {
		return Uri.parse(uriStr + data);
	}

	/*
	 *  -------------------------------------
	 *   Android usage support
	 *  -------------------------------------
	 */
	 protected int notifNum = 0;
	 public void sendNotification(  String logo, String msg ) {
		sendNotification(notifNum++,R.drawable.ic_dronemission,logo, msg,  null );
	}
	 
	public void sendNotification(int id, int iconId, String notifType, String msg,
			Class notifyClass) {
		NotificationManager notificationManager = 
			(NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
		//Create Notification
		Notification notification = 
				new Notification(iconId,notifType, System.currentTimeMillis());
		notification.flags |= Notification.FLAG_AUTO_CANCEL;
		Intent intent;
		if( notifyClass != null )
			 intent = new Intent(this, notifyClass);
		else intent = new Intent( );
		intent.putExtra(notifType, msg);
		PendingIntent pIntent = 
			PendingIntent.getActivity(this, 0, intent,PendingIntent.FLAG_CANCEL_CURRENT);
		notification.setLatestEventInfo(this, notifType, msg, pIntent);
		//Use the Notification Manager
		notificationManager.notify(id, notification);
	}
		
	protected PendingIntent buildPendingIntent(String actionName, int requestCode){
		Intent myIntent = new Intent(actionName);
	    PendingIntent resIntent=
	    		PendingIntent.getBroadcast(this, requestCode, myIntent, PendingIntent.FLAG_ONE_SHOT);
	    return resIntent;
	}
	
	protected boolean checkActivityResult( int resCode, boolean show ){
	String outMsg ="";
	boolean result = false;
		switch( resCode ){
		case Activity.RESULT_OK:
			outMsg = "RESULT_OK";
			result = true;
			break;
		default: result = false;
		}//switch	
		if( show ) println( outMsg );
		return result;
	}
	
  
} 
